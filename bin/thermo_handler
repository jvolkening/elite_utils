#!/usr/bin/env perl

use strict;
use warnings;
use 5.012;

use Getopt::Long;
use Thermo::Handler;

# set defaults
my $DIR_IN       = "$ENV{HOME}/incoming";
my $DIR_OUT      = "$ENV{HOME}/shared";
my $LOG_FILE     = "$ENV{HOME}/transfer.log";
my $AWS_REGION   = 'us-east-2';
my $SNS_REGION   = 'us-east-1';
my $COUNTRY_CODE = '+1'; # default US
my $MACHINE_NAME = 'Thermo mass spectrometer';
my $GALAXY_URL   = 'http://localhost:8080';
my $ADMIN_EMAIL;
my $VAULT_NAME;

# parse user overrides
GetOptions(
    'admin_email=s'     => \$ADMIN_EMAIL,
    'aws_region=s'      => \$AWS_REGION,
    'country_code=s'    => \$COUNTRY_CODE,
    'dir_in=s'          => \$DIR_IN,
    'dir_out=s'         => \$DIR_OUT,
    'galaxy_url=s'      => \$GALAXY_URL,
    'log_file=s'        => \$LOG_FILE,
    'instrument_name=s' => \$MACHINE_NAME,
    'sns_region=s'      => \$SNS_REGION,
    'vault_name=s'      => \$VAULT_NAME,
) or die "Error parsing options: $@\n";

my $handler = Thermo->new(
    dir_in       => $DIR_IN,
    dir_out      => $DIR_OUT,
    admin_email  => $ADMIN_EMAIL,
    log_file     => $LOG_FILE,
    machine_name => $MACHINE_NAME,
    country_code => $COUNTRY_CODE,
    aws_region   => $AWS_REGION,
    sns_region   => $SNS_REGION,
    vault_name   => $VAULT_NAME,
    galaxy_url   => $GALAXY_URL,
);

$handler->run();

exit;


__END__

=head1 NAME

thermo_handler - direct flow of data from a Thermo mass spectrometer

=head1 SYNOPSIS

thermo_handler --dir_in I</path/to/staging/dir> --dir_out I</path/to/final/dir [other options]

=head1 DESCRIPTION

The thermo_handler daemon handles processing and traffic control for data
coming off of a Thermo mass spectrometer. It monitors a staging directory for
incoming raw files and metadata files and triggers handler modules based on
the contents of the metadata file. It is meant to be run as a system service,
and a B<systemd> template is included in the distribution which can be
modified and used locally.

Please see the online documentation for full details on installation and
setup.

=head1 PREREQUISITES

The following non-core modules are required:

 * Array::Utils qw/array_minus/;
 * Bio::Galaxy::API;
 * Config::Tiny;
 * Email::Valid;
 * File::HomeDir;
 * File::Path qw/make_path/;
 * File::Temp qw/tempfile/;
 * File::Which qw/which/;
 * Linux::Inotify2;
 * Net::Amazon::Glacier;
 * Net::Domain qw/hostfqdn/;
 * Net::Rmsconvert;
 * Net::SMTP;
 * Paws;
 * Thermo::Handler;
 * Try::Tiny;

=head1 OPTIONS

=over 4

=item B<--admin_email> I<string>

An email address to which status messages will be sent (default: none)

=item B<--aws_region> I<string>

The region to which AWS calls should be directed. A separate region should be
specified for SNS calls using the B<--sns_region> parameter. (default: us-east-2)

=item B<--country_code> I<string>

The country code prefix to be prepended to phone numbers without one (default:
+1)

=item B<--dir_in> I<string>

The staging directory to be monitored for incoming traffic

=item B<--dir_out> I<string>

The output directory where data should be moved to

=item B<--galaxy_url> I<string>

The full URL (including port if non-standard) of the Galaxy instance to which
API calls should be directed.

=item B<--log_file> I<string>

The name of the file where log messages should be written

=item B<--instrument_name> I<string>

The name of the instrument to be included in notification messages (default:
'Thermo mass spectrometer')

=item B<--sns_region> I<string>

The AWS region to use for SNS messages (default: us-east-1)

=item B<--vault_name> I<string>

The name of the Glacier vault to which files will be uploaded. If not
specified, no Glacier uploads will be done. (default: undefined)

=back

=head1 CAVEATS AND BUGS

Please submit bug reports to the issue tracker in the distribution repository.

=head1 AUTHOR

Jeremy Volkening (jdv@base2bio.com)

=head1 LICENSE AND COPYRIGHT

Copyright 2014-18 Jeremy Volkening

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut

